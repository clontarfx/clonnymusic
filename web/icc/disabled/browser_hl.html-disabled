<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=<#Charset>">

<!--
<meta http-equiv="Expires" content="0">
<meta http-equiv="Cache-Control" content="no-cache, must-revalidate">
<meta http-equiv="refresh" content="1">
-->
<title>Winamp Control Center</title>
<link href="base.css" rel="stylesheet" type="text/css">

<script language="JavaScript" type="text/JavaScript">
 var SearchString = "<#search_files_string>";
 var Netscape = new Boolean();
 if(navigator.appName == "Netscape")  Netscape = true;
 else Netscape = false;

/*
 * from http://www.nsftools.com/misc/SearchAndHighlight.htm,  --henry
 *
 * This is the function that actually highlights a text string by
 * adding HTML tags before and after all occurrences of the search
 * term. You can pass your own tags if you'd like, or if the
 * highlightStartTag or highlightEndTag parameters are omitted or
 * are empty strings then the default <font> tags will be used.
 */
function doHighlight(bodyText, searchTerm, highlightStartTag, highlightEndTag) 
{
  // the highlightStartTag and highlightEndTag parameters are optional
  if ((!highlightStartTag) || (!highlightEndTag)) {
    highlightStartTag = "<font style='color:blue; background-color:yellow;'>";
    highlightEndTag = "</font>";
  }
  
  // find all occurences of the search term in the given text,
  // and add some "highlight" tags to them (we're not using a
  // regular expression search, because we want to filter out
  // matches that occur within HTML tags and script blocks, so
  // we have to do a little extra validation)
  var newText = "";
  var i = -1;
  var lcSearchTerm = searchTerm.toLowerCase();
  var lcBodyText = bodyText.toLowerCase();
    
  while (bodyText.length > 0) {
    i = lcBodyText.indexOf(lcSearchTerm, i+1);
    if (i < 0) {
      newText += bodyText;
      bodyText = "";
    } else {
      // skip anything inside an HTML tag
      if (bodyText.lastIndexOf(">", i) >= bodyText.lastIndexOf("<", i)) {
        // skip anything inside a <script> block
        if (lcBodyText.lastIndexOf("/script>", i) >= lcBodyText.lastIndexOf("<script", i)) {
          newText += bodyText.substring(0, i) + highlightStartTag + bodyText.substr(i, searchTerm.length) + highlightEndTag;
          bodyText = bodyText.substr(i + searchTerm.length);
          lcBodyText = bodyText.toLowerCase();
          i = -1;
        }
      }
    }
  }
  
  return newText;
}


/*
 * from: http://www.nsftools.com/misc/SearchAndHighlight.htm
 * modified by henry
 *
 * This is sort of a wrapper function to the doHighlight function.
 * It takes the searchText that you pass, optionally splits it into
 * separate words, and transforms the text on the current web page.
 * Only the "searchText" parameter is required; all other parameters
 * are optional and can be omitted.
 */
function highlightSearchTerms(element, searchText, treatAsPhrase, warnOnFailure, highlightStartTag, highlightEndTag)
{
  // if the treatAsPhrase parameter is true, then we should search for 
  // the entire phrase that was entered; otherwise, we will split the
  // search string so that each word is searched for and highlighted
  // individually
  if (treatAsPhrase) {
    searchArray = [searchText];
  } else {
    searchArray = searchText.split(" ");
  }

  if (!element || typeof(element.innerHTML) == "undefined") {
    if (warnOnFailure) {
      alert("Sorry, for some reason the text of this page is unavailable. Searching will not work.");
    }
    return false;
  }

  var bodyText = element.innerHTML;
  for (var i = 0; i < searchArray.length; i++) {
    bodyText = doHighlight(bodyText, searchArray[i], highlightStartTag, highlightEndTag);
  }
  element.innerHTML = bodyText;
  return true;
}

function setCheckboxes(the_form, do_check)
{
var elts = document.forms[the_form].elements['add'];
var elts_cnt = elts.length;
for (var i = 0; i < elts_cnt; i++)
	{
	elts[i].checked = do_check;
    }
return true;
}

function invertCheckboxes(the_form)
{
var elts      = document.forms[the_form].elements['add'];
var elts_cnt  = elts.length;
for (var i = 0; i < elts_cnt; i++)
	{
	if(elts[i].checked) elts[i].checked = false;
	else elts[i].checked = true;
    }
return true;
}
</script>
					
</head>
<body id="thebody" text="#FFFF00" bgcolor="#000033" link="#CCCCCC" vlink="#CCCCCC" alink="#FFFFFF" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<center>
  <p class="standard"><a href="browser.html?refresh">exit from search</a></p>
  <form action="browser_hl.html" method="get" name="searchform" target="_self" class="standard" id="searchform">
    <p>search: 
      <input name="search_files_string" type="text" id="search_files_string" value="<#search_files_string>">
      &nbsp; 
      <input type="submit" name="button" value="  search  ">
      <br>
      search for: 
      <input name="search_for_directories" type="checkbox" id="search_for_directories" value="true" checked>
      directories 
      <input name="search_for_files" type="checkbox" id="search_for_files" value="true" checked>
      files <br>
      <input name="search_in_subdirs" type="checkbox" id="search_in_subdirs" value="true" checked>
      include subdirs </p>
    </form>

<p class="standard" id="searchresult"><#include file=templates/browser_hl_template.html> 
  <p class="standard"><a href="browser.html?refresh">refresh</a> 
  <!-- <p class="standard"><a href="index.html?clear&page=browser" target="_top">clear playlist</a></p> -->
  </center>
<script language="JavaScript" type="text/JavaScript">
function highlight()
{
highlightSearchTerms(document.getElementById("searchresult"), SearchString, true, true, "<span class=\"highlight4\">", "</span>");
}

if(Netscape) highlightSearchTerms(document.getElementById("thetable"), SearchString, true, true, "<span class=\"highlight4\">", "</span>");
else window.setTimeout("highlight()",500);
</script>

</body>
</html>
